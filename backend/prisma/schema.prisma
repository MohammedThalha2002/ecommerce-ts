// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(cuid())
  email           String         @unique
  passwordHash    String? // null for OAuth users
  name            String?
  role            Int            @default(0) // 0=customer, 1=admin
  emailVerifiedAt DateTime?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  refreshTokens   RefreshToken[]
  oauthAccounts   OAuthAccount[]

  @@map("users")
}

model OAuthAccount {
  provider   String
  providerId String
  userId     String
  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerId])
  @@map("oauth_accounts")
}

model RefreshToken {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  tokenHash   String    @unique
  expiresAt   DateTime
  createdByIp String?
  userAgent   String?
  deviceId    String?
  revokedAt   DateTime?
  createdAt   DateTime  @default(now())

  @@index([userId])
  @@map("refresh_tokens")
}
